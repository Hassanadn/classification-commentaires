version: '3.7'

services:
  # Service Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
     - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  # Service PushGateway pour Prometheus
  prometheus_pushgateway:
    image: prom/pushgateway
    container_name: prometheus_pushgateway
    ports:
      - "9091:9091"
    networks:
      - monitoring_network

  # Service Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - ./data/grafana:/var/lib/grafana
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring_network

  # Service pour l'entraînement de modèles avec WANDB
  model_training:
    build: .
    container_name: model_training
    volumes:
      - ./:/app
      - wandb_data:/app/models/wandb
    env_file:
      - ./config/.env
    environment:
      - PYTHONPATH=/app
      - WANDB_MODE=online
      - PROMETHEUS_PUSHGATEWAY=prometheus_pushgateway:9091
    depends_on:
      - prometheus
    networks:
      - monitoring_network

  # Service API pour exposer les modèles
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: model_api
    volumes:
      - ./:/app
      - wandb_data:/app/models/wandb
    env_file:
      - ./config/.env
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    command: ["python", "src/api/main.py"]
    depends_on:
      - model_training
    networks:
      - monitoring_network

volumes:
  grafana_data:
  wandb_data:

networks:
  monitoring_network:
    driver: bridge
